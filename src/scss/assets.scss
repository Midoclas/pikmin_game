@use "mixin";
@use "mapping";
@use "sass:list";

$delay-pikmin-animation: 1s;
$delay-pikmin-plant-animation: 0.5s;
$delay-onion-animation: 0.2s;

.pikmin {
    width: 22px;
    height: 51px;
    background-image: url('../img/sprite.png');
    animation-timing-function: steps(1)!important;
    background-position: 50% 100%;

    @each $pikmin, $value in mapping.$pikmins {
        &_#{$pikmin} {
            animation: pikmin_#{$pikmin}_animation $delay-pikmin-animation infinite;
            &_plant_animation {
                animation: pikmin_#{$pikmin}_plant_animation $delay-pikmin-plant-animation infinite;
            }
        }
    }

    // &.leaf::before {
    //     content: "";
    //     display: block;
    //     background-image: url('../img/sprite.png');
    //     background-position: -289px -165px;
    //     width: 16px;
    //     height: 13px;
    //     margin-left: 7px;
    // }
}

.plant {
    width: 32px;
    height: 31px;
    background-image: url('../img/sprite.png');
    animation-timing-function: steps(3, jump-none)!important;
}

.onion {
    background-image: url('../img/sprite.png');
    animation-timing-function: steps(2, jump-none)!important;
    width: 111px;
    height: 113px;

    @each $pikmin, $value in mapping.$pikmins {
        &_pikmin_#{$pikmin}_animation {
            animation: onion_pikmin_#{$pikmin}_animation $delay-onion-animation infinite;
        }
    }
}

.onionImgContainer {
    top: -1000px;
}

@each $onion, $value in mapping.$onion {
    $data: list.nth($value, 1);
    $sprite: list.nth($data, 2);
    @include mixin.two-steps-keyframe(
        "onion_pikmin_#{$onion}_animation",
        list.nth($sprite, 1),
        list.nth($sprite, 2),
        list.nth($sprite, 3), 
        list.nth($sprite, 4)
    )
}

@each $pikmin, $value in mapping.$pikmins {
    $data: list.nth($value, 2);
    $sprite: list.nth($data, 2);
    
    @include mixin.two-steps-keyframe(
        "pikmin_#{$pikmin}_plant_animation",
        list.nth($sprite, 1),
        list.nth($sprite, 2),
        list.nth($sprite, 3), 
        list.nth($sprite, 4)
    )
}

@each $pikmin, $value in mapping.$pikmins {
    $data: list.nth($value, 1);
    $sprite: list.nth($data, 2);
    @include mixin.eight-steps-keyframe(
        "pikmin_#{$pikmin}_animation",
        list.nth($sprite, 1),
        list.nth($sprite, 2),
        list.nth($sprite, 3), 
        list.nth($sprite, 4),
        list.nth($sprite, 5),
        list.nth($sprite, 6)
    )
}